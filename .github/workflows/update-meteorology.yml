# https://github.com/jasonetco/jasonetco/blob/master/.github/workflows/daily-updates.yml

name: Update Meteorology

on:
  schedule:
    - cron: "0 4 * * *" # “At every 04:00.”
    # - cron: "0 * * * *" # “At every 0th minute (a.k.a. every hour).”
  push:
    branches:
      - main

jobs:
  updates:
    name: Update Meteorology
    runs-on: ubuntu-latest
    steps:
      - name: Create Multiline Data
        # With this approach we completely deviate from the GitHub Actions `set-output` notation and instead use environment variables.
        # We’re constructing a [here document](https://tldp.org/LDP/abs/html/here-docs.html) and pushing it incrementally to ${GITHUB_ENV}.
        # By this approach, we are then able to reference this multiline string that is stored in the environment variable as input with ${{ env.<environment_variable> }}.
        # In the following example. it is ${{ env.RANDOM_MULTILINE_DATA }}.
        # https://trstringer.com/github-actions-multiline-strings/
        # https://serverfault.com/questions/72476/clean-way-to-write-complex-multi-line-string-to-a-variable/72511#72511
        run: |
          RANDOM_MULTILINE_STRING=$(cat << EOF
          Lorem ipsum dolor sit amet, consectetur adipiscing elit.
          Phasellus at nulla nisl.
          Fusce vitae nulla a nisi bibendum vehicula.

          <?xml version="1.0" encoding='UTF-8'?>
          <painting>
            <img src="madonna.jpg" alt='Madonna of Foligno, by Raffaello Sanzio da Urbino'
              description="The Madonna of Foligno is a painting by the Italian High Renaissance painter Raffaello Sanzio da Urbino, executed c. 1511–1512."/>
            <caption>This is Raphael's "Foligno" Madonna, painted in
            <date>1511</date>-<date>1512</date>.</caption>
          </painting>

          Nam accumsan finibus ipsum et vestibulum.
          Donec volutpat id nibh in pulvinar.
          EOF
          )
          echo ""
          echo "RANDOM_MULTILINE_DATA<<EOF" >> ${GITHUB_ENV}
          echo "${RANDOM_MULTILINE_STRING}" >> ${GITHUB_ENV}
          echo "EOF" >> ${GITHUB_ENV}
          echo ""
          echo "⇓⇓⇓⇓ \${RANDOM_MULTILINE_STRING} ⇓⇓⇓⇓"
          echo "${RANDOM_MULTILINE_STRING}"
        shell: bash
      - name: Display Multiline Data
        run: |
          echo ""
          echo "⇓⇓⇓⇓⇓⇓⇓⇓ \${env.RANDOM_MULTILINE_DATA} ⇓⇓⇓⇓⇓⇓⇓⇓"
          echo "${{ env.RANDOM_MULTILINE_DATA }}"
        shell: bash

      # - id: set-result
      #   shell: bash
      #   run: |
      #     METEOROLOGY_XML_DATA=$(curl \
      #       --fail \
      #       --header 'github.com/sheeeng leonard.sheng.sheng.lee@gmail.com' \
      #       --request 'GET' \
      #       --show-error \
      #       --silent \
      #       --url 'https://api.met.no/weatherapi/sunrise/2.0/?lat=59.933333&lon=10.716667&date=2022-08-25&offset=+02:00' \
      #       --user-agent 'github.com/sheeeng leonard.sheng.sheng.lee@gmail.com' \
      #       )
      #     echo "⇓⇓⇓⇓ \${METEOROLOGY_XML_DATA} ⇓⇓⇓⇓"
      #     echo "${METEOROLOGY_XML_DATA}"
      #     echo ""
      #     echo "METEOROLOGY_DATA <<EOF" >> $GITHUB_ENV
      #     echo "${METEOROLOGY_XML_DATA}" >> $GITHUB_ENV
      #     echo "EOF" >> $GITHUB_ENV
      #     echo ""
      #     echo "⇓⇓⇓⇓ \${env.METEOROLOGY_DATA} ⇓⇓⇓⇓"
      #     echo "${METEOROLOGY_DATA}""
      # - name: Get result
      #   run: |
      #     echo ""
      #     echo "⇓⇓⇓⇓⇓⇓⇓⇓ \${env.METEOROLOGY_DATA} ⇓⇓⇓⇓⇓⇓⇓⇓"
      #     echo "${{ env.METEOROLOGY_DATA }}"

      # - uses: actions/checkout@v3
      # - uses: actions/setup-node@v2
      #   with:
      #     node-version: 18
      # - run: npm install --global yarn
      # - run: yarn add moment moment-timezone txml node-fetch@2.6.1 # https://stackoverflow.com/a/70541151
      # - uses: actions/github-script@v6
      #   with:
      #     github-token: ${{ secrets.USER_SCOPE_PERSONAL_ACCESS_TOKEN }}
      #     script: |
      #       const script = require('.github/workflows/update-meteorology.js')
      #       console.log(await script({github, context, core}))
